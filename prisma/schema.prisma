// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  username  String
  email     String      @unique
  password  String
  watchlist Watchlist[]
  watched   Watched[]
  favorites Favorite[]
}

model Movie {
  id          Int         @id @default(autoincrement())
  title       String
  posterPath  String
  genreIds    Int[]
  voteAverage Float
  releaseDate DateTime
  watchlist   Watchlist[]
  watched     Watched[]
  favorites   Favorite[]
}

model Watchlist {
  id        Int      @id @default(autoincrement())
  userId    String
  movieId   Int
  user      User     @relation(fields: [userId], references: [id])
  movie     Movie    @relation(fields: [movieId], references: [id])
  createdAt DateTime @default(now())
}

model Watched {
  id        Int      @id @default(autoincrement())
  userId    String
  movieId   Int
  user      User     @relation(fields: [userId], references: [id])
  movie     Movie    @relation(fields: [movieId], references: [id])
  createdAt DateTime @default(now())
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userId    String
  movieId   Int
  user      User     @relation(fields: [userId], references: [id])
  movie     Movie    @relation(fields: [movieId], references: [id])
  createdAt DateTime @default(now())
}
